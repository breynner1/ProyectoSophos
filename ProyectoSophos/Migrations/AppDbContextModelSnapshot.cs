// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoSophos.DBContext;

#nullable disable

namespace ProyectoSophos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoSophos.Models.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreditosInscritos")
                        .HasColumnType("int")
                        .HasColumnName("creditos_inscritos");

                    b.Property<int?>("FacultadId")
                        .HasColumnType("int")
                        .HasColumnName("facultad_id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<int>("Semestre")
                        .HasColumnType("int")
                        .HasColumnName("semestre");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.ToTable("alumnos");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<int>("CuposDisponibles")
                        .HasColumnType("int")
                        .HasColumnName("cupos_disponibles");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<int?>("PrerequisitoId")
                        .HasColumnType("int")
                        .HasColumnName("prerequisito_id");

                    b.Property<int?>("ProfesorId")
                        .HasColumnType("int")
                        .HasColumnName("profesor_id");

                    b.HasKey("Id");

                    b.HasIndex("PrerequisitoId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("cursos");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Facultad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("facultad");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int")
                        .HasColumnName("alumno_id");

                    b.Property<int>("CursoId")
                        .HasColumnType("int")
                        .HasColumnName("curso_id");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("CursoId");

                    b.ToTable("matriculas");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Profesore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Experiencia")
                        .HasColumnType("int")
                        .HasColumnName("experiencia");

                    b.Property<string>("MaximoTituloAcademico")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("maximo_titulo_academico");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("profesores");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Alumno", b =>
                {
                    b.HasOne("ProyectoSophos.Models.Facultad", "Facultad")
                        .WithMany("Alumnos")
                        .HasForeignKey("FacultadId");

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Curso", b =>
                {
                    b.HasOne("ProyectoSophos.Models.Curso", "Prerequisito")
                        .WithMany("InversePrerequisito")
                        .HasForeignKey("PrerequisitoId");

                    b.HasOne("ProyectoSophos.Models.Profesore", "Profesor")
                        .WithMany("Cursos")
                        .HasForeignKey("ProfesorId");

                    b.Navigation("Prerequisito");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Matricula", b =>
                {
                    b.HasOne("ProyectoSophos.Models.Alumno", "Alumno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoSophos.Models.Curso", "Curso")
                        .WithMany("Matriculas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Alumno", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Curso", b =>
                {
                    b.Navigation("InversePrerequisito");

                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Facultad", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("ProyectoSophos.Models.Profesore", b =>
                {
                    b.Navigation("Cursos");
                });
#pragma warning restore 612, 618
        }
    }
}
